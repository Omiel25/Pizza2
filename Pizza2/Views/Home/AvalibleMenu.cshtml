@model AvalibleMenuModel

@{
    //Layout is avalible fo displaying shared views
    if ((int)TempData["Privilages"] == 1)
    {
        Layout = "~/Views/Shared/_WorkerLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/Logo.cshtml";
    }

    int pizzaCount = 0;
    int ingridientCount = Model?.Ingridients?.Count() ?? 0;
    float startingPrice = Model?.Ingridients?
    .Where(i => 
        i.IngridientName == "Pizza Pie").Select(i => i.IngridientPrice)
    .FirstOrDefault() ?? 0f; 
}

<div class="text-center container">

    <h3 class="text-special main-quote">Something more than just a pizz@@~</h3>
    <form asp-controller="Home" asp-action="Order" method="post" id="pizza-cart"class="my-4">
        <div id="cart-container">
            <!--Place for pizzas added via JS QQ-->
        </div>
        <span id="order-count"> 0 </span>
        <button type="submit" class="icon-container">
            <img id="shopping-cart-icon" src="~/images/ShoppingCart.png" />
        </button>
    </form>
</div>


<div class="container line-container">
    <hr />
</div>


<div class="container menu-container">
    <div class="row text-center">

        <div class="row my-4">
            <div class="col-12 pizza-container-header text-center text-special" id="pizza-header-container">
                <h4>Create your own custom pizza!</h4>
            </div>

            <div class="col-4" id="custom-pizza-images">
                @for (int i = 0; i < ingridientCount; i++)
                {
                    string ingridientName = Model?.Ingridients?[ i ].IngridientName ?? "error";
                    @if (ingridientName == "Pizza Pie")
                    {
                        <img src="@Url.Content($"~/images/Ingridients/{ingridientName}.png")"
                             class="img-fluid rounded-top"
                             id="@ingridientName"
                             alt="" />
                    }
                    else
                    {
                        <img src="@Url.Content($"~/images/Ingridients/{ingridientName}.png")"
                             class="img-fluid rounded-top pizza-ingridient-image"
                             id="@ingridientName"
                             alt="" />
                    }

                }
            </div>

            <div class="col-5" id="custom-pizza-ingridients">
                <div class="row py-1">
                    @foreach (var sauce in Model.Sauces)
                    {
                        <div class="col-4">
                            <label class="form-check-label" for="Sauce">
                                @sauce.IngridientName
                                <input type="radio" name="Sauce" value="@sauce.IngridientName" id="@sauce.IngridientName" class="form-check-input">
                            </label>
                        </div>
                    }
                </div>

                <div class="row py-1">
                    <div class="col">
                        <label class="form-check-label" for="Pie">
                            Classic Pizza Pie
                            <input type="radio" name="Pie" value="@Model.Pies[0].IngridientName" id="Pizza Pie" class="form-check-input" checked>
                        </label>
                    </div>
                    @foreach (var pie in Model.Pies)
                    {
                        <div class="col">
                            <label class="form-check-label" for="Pie">
                                @pie.IngridientName
                                <input type="radio" name="Pie" value="@pie.IngridientName" id="@pie.IngridientName" class="form-check-input">
                            </label>
                        </div>
                    }
                </div>

                <div class="row justify-content-start py-1">
                    @foreach (var ingridient in Model.ClassicIngridients)
                    {
                        <div class="col-4">
                            <span> @ingridient.IngridientName </span>
                            <input type="checkbox" name="@ingridient.IngridientName" value="@ingridient.IngridientName" id="@ingridient.IngridientName" class="form-check-input">
                        </div>
                    }
                </div>
            </div>

            <div class="col-2 my-3" id="custom-pizza-form-container">
                <p id="custom-pizza-price">@startingPrice PLN</p>
                <div id="custom-pizza-form">
                    <div id="custom-pizza-form-ingridients">

                    </div>
                    <input type="text" name="pizza-name" value="Custom Pizza" id="pizza-name" class="form-control my-1" />
                    <input type="text" name="pizza-price" value="@startingPrice" id="custom-pizza-price-input" hidden/>
                    <button id="add-custom-pizza-btn" class="btn btn-success my-2">Add pizza to the cart</button>
                </div>
            </div>

            <hr />
        </div>
        @if(Model?.Pizzas != null)
        {
            @foreach (var pizzaHolder in Model.Pizzas)
            {
                <div class="row pizza-container">

                    <div class="col-12 pizza-container-header text-center text-special" id="pizza-header-container">
                        @if (pizzaHolder.PizzaIngridients.Where( i => i.ContainsMeat ).Any())
                        {
                            <div class="d-flex justify-content-center">
                                <h4>@pizzaHolder.Pizza.PizzaName</h4>
                            </div>
                        }
                        else
                        {
                            <div class="d-flex justify-content-center">
                                <h4>@pizzaHolder.Pizza.PizzaName</h4>
                                <img src="@Url.Content($"~/images/AvalibleMenu/Vege.png")"
                                     class="img-fluid rounded-top mx-2"
                                     id="img1"
                                     style="height: 32px; width: 32px;"
                                     alt="" />
                            </div>
                        }
                    </div>

                    <div class="col-5 pizza-image" id="pizza-img-container" name="pizza-image-container">
                        @for (int i = 0; i < pizzaHolder.PizzaIngridients.Count(); i++)
                        {
                            <img src="@Url.Content($"~/images/Ingridients/{pizzaHolder.PizzaIngridients[i].IngridientName}.png")"
                                 class="img-fluid rounded-top"
                                 id="img1"
                                 style="z-index: @pizzaHolder.PizzaIngridients[i].ImagePriority;"
                                 alt="" />
                        }
                        @* <img src="~/images/AvalibleMenu/Pizza.png" class="img-fluid" alt="Responsive image"> *@
                    </div>

                    <div class="col-4 pizza-ingridients text-start">
                        @for (int i = 0; i < pizzaHolder.PizzaIngridients.Count(); i++)
                        {
                            if (!@pizzaHolder.PizzaIngridients[ i ].IngridientName.Contains( "Pizza Pie", StringComparison.OrdinalIgnoreCase ))
                            {
                                if (i + 1 == pizzaHolder.PizzaIngridients.Count())
                                {
                                    <span class="py-3">@pizzaHolder.PizzaIngridients[ i ].IngridientName</span>
                                }
                                else
                                {
                                    <span class="py-3">@pizzaHolder.PizzaIngridients[ i ].IngridientName, </span>
                                }
                            }
                        }
                    </div>

                    <div class="col-3 pizza-buttons text-center">
                        <div class="row">
                            <div class="col-12 py-3">
                                <span>@pizzaHolder.Pizza.PizzaPrice PLN</span>
                            </div>
                            <div class="col-12 py-3" name="data-container">
                                <input type="number" value="@pizzaHolder.Pizza.Id" id="data" hidden>
                                <input class="" type="text" value="@pizzaHolder.Pizza.PizzaName" id="data-name" hidden>
                                <button class="btn btn-primary" id="add-to-cart-btn">Add to cart!</button>
                            </div>
                        </div>

                    </div>

                </div>
                pizzaCount++;
                @if (pizzaCount != Model.Pizzas.Count())
                {
                    <hr />
                }
            }
        }
    </div>
</div>

<script type="text/javascript" defer>
    //----------- BEGIN Shopcart_Script -----------
    var cartContainer = document.getElementById("cart-container");
    var dataContainer = document.getElementsByName("data-container");
    var orderCount = document.getElementById("order-count");

    var cartSizeCount = 0;

    dataContainer.forEach((container, index) => {
        var btn = container.querySelector("#add-to-cart-btn");
        var data = container.querySelector("#data");
        var pizzaName = container.querySelector("#data-name");

        btn.addEventListener("click", (index) => {
            var id = data.value;
            var name = pizzaName.value;

            var newInput = "";

            newInput = `<input type="number" name="pizza-${cartSizeCount}" value="${id}" id="data" hidden>`;

            cartContainer.innerHTML += newInput;

            cartSizeCount++;

            //Show alert with success message
            swal({
                icon: "success",
                title: "Success",
                text: `Succesfully added ${name} to the cart!`
            });

            //Refresh order count
            orderCount.innerHTML = `${cartSizeCount} - `;
        });
    });
    //----------- END Shopcart_Script -----------

    //----------- BEGIN Pizza_Img_Creation -----------
    let imageContainer = document.getElementsByName("pizza-image-container");
    let customPizzaImagesContainer = document.querySelectorAll("#custom-pizza-images");

    let leftPosition = 0;
    let topPosition = 0;
    let zPosition = 1;

    if (document.readyState) {
        imageContainer.forEach(container => {
            console.log("Container height: " + containerHeight);
            console.log("containerRect.bottom: " + containerRect.bottom);
            console.log("containerRect.top: " + containerRect.top);
            let containerRect = container.getBoundingClientRect();
            let containerHeight = containerRect.bottom - containerRect.top;

            let images = container.querySelectorAll("img");

            images.forEach(image => {
                if (zPosition == 1) {

                    leftPosition = containerRect.left;
                    topPosition = containerRect.top;

                    image.style = `position:absolute; left:${leftPosition}; top:${topPosition}; height:${containerHeight}px;`;
                    image.style.zIndex = zPosition;
                } else {
                    image.style = `position:absolute; left:${leftPosition}; top:${topPosition}; height:${containerHeight}px;`;
                    image.style.zIndex = zPosition;
                }
                zPosition++;
            });
        });

        customPizzaImagesContainer.forEach(container => {
            let containerRect = container.parentElement.getBoundingClientRect();
            let containerHeight = containerRect.bottom - containerRect.top;

            let images = container.querySelectorAll("img");

            images.forEach(image => {
                if (zPosition == 1) {

                    leftPosition = containerRect.left;
                    topPosition = containerRect.top;

                    image.style = `position:absolute; left:${leftPosition}; top:${topPosition}; height:${containerHeight}px;`;
                    image.style.zIndex = zPosition;
                } else {
                    image.style = `position:absolute; left:${leftPosition}; top:${topPosition}; height:${containerHeight}px;`;
                    image.style.zIndex = zPosition;
                }
                zPosition++;
            });
        });
    }
    //----------- END Pizza_Creation -----------

    //------------------------------------------
    let customPizzaImages = document.querySelectorAll("#custom-pizza-images .pizza-ingridient-image");
    let customPizzaInputs = document.querySelectorAll("#custom-pizza-ingridients input");
    let customPizzaForm = document.querySelector("#custom-pizza-form-container #custom-pizza-form");

    let customPizzaIngridients = [];

    //Set all ingridients visibility to hidden
    customPizzaImages.forEach(image => {
        image.style.visibility = "hidden";
    });

    //Change images visibilities on input change and update price
    customPizzaInputs.forEach(input => {
        //Change images visibilities
        input.addEventListener("click", (index) => {
            let customPizzaInputID = input.id;
            let customPizzaInputChecked = input.checked;

            let skipLoop = false;
            customPizzaImages.forEach(img => {
                if (skipLoop == true) {
                    return;
                }

                if (img.id == customPizzaInputID) {
                    img.style.visibility = customPizzaInputChecked ? 'visible' : 'hidden';
                    if (customPizzaInputID.includes("Sauce")) {
                        //disable other sauces
                        customPizzaImages.forEach(ingridientImage => {
                            if (ingridientImage.id.includes("Sauce") && ingridientImage.id != img.id) {
                                ingridientImage.style.visibility = "hidden";
                            }
                        });
                    } 

                    skipLoop = true;
                }

            });
            
            //Update price and put ingridients + basket pizzas in input
            let customPizzaForm = document.querySelector("#custom-pizza-form-container #custom-pizza-form");
            let customPizzaFormIngridientsContainer = document.querySelector("#custom-pizza-form-container #custom-pizza-form-ingridients");
            customPizzaFormIngridientsContainer.innerHTML = "";

            var ingridients = JSON.parse('@Html.Raw(Json.Serialize(Model.Ingridients))');
            var pizzaPrice = JSON.parse('@Html.Raw( Json.Serialize( startingPrice ) )');

            //Reset custom pizza ingridients
            customPizzaIngridients = [];

            customPizzaInputs.forEach(box => {
                if (box.checked) {
                    //Set price
                    let skipLoop = false;
                    let ingridientName = box.id;
                    ingridients.forEach(ingridient => {
                        if(skipLoop){
                            return;
                        }

                        if (ingridient.ingridientName != "Pizza Pie" && ingridient.ingridientName == ingridientName) {
                            let ingridientPrice = ingridient.ingridientPrice;
                            pizzaPrice += ingridientPrice;
                            skipLoop = true;

                            //Put ingridients inside form container
                            var newInput = "";

                            newInput = `<input type="number" name="${ingridient.ingridientName}" value="${ingridient.id}" hidden>`;

                            customPizzaFormIngridientsContainer.innerHTML += newInput;
                            customPizzaIngridients.push(ingridient.ingridientName);
                        }
                    });
                }
            });

            let customPizzaPrice = document.querySelector("#custom-pizza-form-container #custom-pizza-price");
            let customPizzaPriceInput = document.querySelector("#custom-pizza-form-container #custom-pizza-price-input");

            pizzaPrice = (Math.round(pizzaPrice * 100) / 100).toFixed(2);

            customPizzaPrice.innerHTML = `<span class='py-2'> Price: ${pizzaPrice} PLN</span>`;

            customPizzaPriceInput.value = pizzaPrice;
        });
    });

    //Fire ajax request to server - AddCustomPizza - and add result to the basket
    let customPizzaFormInputs = document.querySelectorAll("#custom-pizza-form-ingridients input")
    let customPizzaFormButton = document.querySelector("#add-custom-pizza-btn");
    let pizzaCart = document.querySelectorAll("#cart-container input");
    let pizzaNameInput = document.querySelector("#pizza-name");

    function AddCustomPizza(event) {
        let pizzaName = pizzaNameInput.value;

        $.ajax({
            url: '/Home/createCustomPizza',
            type: 'post',
            traditional: true,
            data: { ingridients: customPizzaIngridients, name: pizzaName },
            dataType: 'json',
            success: function (data) {
                var newInput = "";

                newInput = `<input type="number" name="pizza-${cartSizeCount}" value="${data.addedPizzaID}" id="data" hidden>`;

                cartContainer.innerHTML += newInput;

                cartSizeCount++;

                //Show alert with success message
                swal({
                    icon: "success",
                    title: "Success",
                    text: `Succesfully added Your own pizza to the cart!`
                });

                //Refresh order count
                orderCount.innerHTML = `${cartSizeCount} - `;
            },
            error: function (data) {
                alert("Something went wrong...");
            }
        });
    }

    customPizzaFormButton.addEventListener("click", AddCustomPizza);
    /*
    1.Get ID of the input
    2.Get img with the same id
    3.Make img hidden/visible
    */

</script>
